2012-07-27  Nick Alcock  <nick.alcock@oracle.com>

	Varname->type-id tracking.

	* libctf/ctf_impl.h: Prototype new functions and newly-non-static
	functions.
	(ctf_dvdef): New structure, for dynamic variable definitions.
	(ctf_file): Add ctf_vars, ctf_nvars, ctf_dvhash, ctf_dvhashlen,
	and ctf_dvdefs for var-update tracking, and ctf_updates for
	tracking var creation time.  Rename ctf_dtstrlen to ctf_dtvstrlen.
	* libctf/ctf_error.c (ECTF_DUPMEMBER): Rename to...
	(ECTF_DUPLICATE): ... this, now that we use it for tracking
	duplicate variables too.

	* libctf/ctf_create.c (ctf_create): Initialize the new, and
	renamed, ctf_file_t fields.  Reduce the hashlen size again.
	(sort_var): New qsort() function to sort an array of ctf_varents.
	(ctf_update): Fill out the cth_typeoff header field and the varent
	section; sort that section.  Add assertions verifying that the
	section sizes and their dead-reckoned counts match.  Increment the
	ctf_updates field. Rename all size vars to something less
	confusing.
	(ctf_dvd_insert): New, insert a dynamic variable definition.
	(ctf_dvd_delete): New, delete one, using ctf_updates to track
	definition ages.
	(ctf_dvd_lookup): New, look one up.
	(ctf_discard): Discard appropriate dvd entries.
	(ctf_add_variable): New, add a variable to the ctf_dvdhash.
	(ctf_dtd_delete): Rename ctf_dtstrlen to ctf_dtvstrlen.
	(ctf_add_generic): Likewise.
	(membadd): Likewise.
	(ctf_add_enumerator): Likewise.  Rename ECTF_DUPMEMBER to
	ECTF_DUPLICATE.
	(ctf_add_member_offset): Likewise.
	* libctf/ctf_hash.c (ctf_hash_create): Reduce the hashlen size
	again.
	(ctf_hash_compute): No longer static.
	* libctf/ctf_lookup.c: (lookup_var_key): New.
	(lookup_var): New bsearch() function, look up a variable.
	(ctf_lookup_variable): New, look up a variable.
	* libctf/ctf_open.c (ctf_bufopen): Load the variables section.
	(ctf_close): Free the dvdhash and list.
	* libctf/libdtrace-ctf.ver: Newly-exported ctf_lookup_variable()
	and ctf_add_variable().
	* include/sys/ctf_api.h: Adjust appropriately.

	* GNUmakefile: Install libraries to lib64, not lib.
	* libctf/Build: Link against zlib.

	* libctf/ctf_create.c (ctf_dtd_insert): Use a better hash function.
	(ctf_dtd_delete): Likewise.
	(ctf_dtd_lookup): Likewise.

	* include/sys/ctf.h (CTF_PARENT_SHIFT): Drop, unused.

	* libctf/ctf_open.c (ctf_import): Only set the parent name if the
	parent is non-NULL.

	* libctf/ctf_types.c (ctf_type_compat): Fix type equivalence
	checks to be more like C.

2012-07-25  Nick Alcock  <nick.alcock@oracle.com>

	* include/sys/ctf.h: Update CTF comment, adding variable
	info.
	(CTF_OLD_VERSIONS): Remove.
	(ctf_header_v1): Likewise.
	(CTF_*_V1): Likewise.
	(CTF_MAGIC): Change, this is no longer compatible with Solaris libctf.
	(CTF_VERSION_2): Delete.
	(CTF_VERSION): Update.
	(ctf_header): Add cth_varoff.
	(ctf_varent): New.
	* libctf/ctf_open.c (_CTF_SECTION): Change to .dtrace_ctf.
	(get_kind_v1): Remove.
	(get_root_v1): Likewise.
	(get_vlen_v1): Likewise.
	(get_kind_v2): Rename to...
	(get_kind): ... this.
	(get_root_v2): Rename to...
	(get_root): ... this.
	(get_vlen_v2): Rename to...
	(get_vlen)... this.
	(ctf_fileops): Adjust.
	(init_types): Remove v1 support, and support for pre-cth_parname
	containers.
	(ctf_bufopen): Verify varoff position and alignment.
	* libctf/ctf_labels.c (extract_label_info): Remove v1 support.
	* libctf/ctf_types.c (ctf_get_ctt_size): Likewise.
	(ctf_member_iter): Likewise.
	(ctf_type_align): Likewise.
	(ctf_member_info): Likewise.
	(ctf_type_rvisit): Likewise.
	libctf/Build (libdtrace-ctf_CPPFLAGS): Drop -D_CTF_OLD_VERSIONS.

	* README: Note that the file formats are incompatible now.

	* libctf/ctf_impl.h (ctf_dynparname): New ctf_file field.
	* libctf/ctf_open.c (ctf_parent_name_set): New function.
	* include/sys/ctf_api.h: Prototype it.
	* libctf/libdtrace-ctf.ver: Export it.
	* libctf/ctf_open.c (ctf_import): Call it with "PARENT" if no name
	is already set.
	(ctf_close): Free ctf_dynparname if set.
	* libctf/ctf_create.c (_CTF_STRTAB_TEMPLATE): Delete.
	(ctf_create): The dtstrlen no longer includes the size of the
	template.
	(ctf_update): If a parname is set, add it to the cth_strlen size.
	Always add a \0 as the first string table byte; copy in
	ctf_parname as the first strtab element if set.

2012-07-20  Nick Alcock  <nick.alcock@oracle.com>

	* libctf/ctf_hash.c (ctf_hash_create): Make this hash table bigger
	too.

2012-07-19  Nick Alcock  <nick.alcock@oracle.com>

	* libctf/ctf_create.c (ctf_create): Use a much bigger hash table.

2012-07-17  Nick Alcock  <nick.alcock@oracle.com>

	* libctf/ctf_error.c (_ctf_errlist): Synch with the error
	#defines.

	* include/sys/ctf.h (CTF_MAX_PTYPE): New, the maximum possible
	parent CTF type ID.

	* libctf/ctf_create.c (ctf_add_generic): Stop parent types from
	overflowing into the child type ID space.

	* .gitignore: New, ignore the build directory, editor backup
	files, and object files.

2012-07-16  Nick Alcock  <nick.alcock@oracle.com>

	* Makeconfig (CONFIG_H): Add missing path slash.
	* include/Build (install): Fix silent build output during
	header installation.

2012-06-18  Nick Alcock  <nick.alcock@oracle.com>

	Synch build system from DTrace.

	Add a crude symbol-checking infrastructure, like Autoconf's
	AC_CHECK_LIB.  Use it to check for elf_getshdrstrndx().

	* Makeconfig: New file.
	* GNUmakefile: Include it.  Search the objdir for generated header files.
	* Makefunctions: All C compilations depend on the config.h file.
	* README.build.system: Describe the new infrastructure briefly.

	* GNUmakefile: No longer specify 64-bitness of file I/O: it is
	redundant on x86-64 and breaks fts().

2012-05-18  Nick Alcock  <nick.alcock@oracle.com>

	Creation, split from dtrace and relicensed.
